------------------diferencias entre js y node---
En JavaScript del lado del cliente tenemos el DOM y el CSSDOM así como el objeto window para manipular los elementos de nuestra página además una serie de APIs, aquí unos ejemplos:

    fetch
    SessionStorage y LocalStorage
    canvas
    bluetooth
    audio
    web authentication
Mientras que en Node.js no tenemos un DOM ni un objeto windows, lo que sí tenemos son una serie de módulos que nos permiten interactuar con los recursos de la máquina como el sistema operativo y el sistema de archivos, por ejemplo:
    os
    fs
    http
    util
    debugger
    stream
    events
------------------------ARQUITECTURA ORIENTADA A EVENTOS------
emmiter.

#########################    NODE-WEB    ###########################

# strings tienen eventos

######################### Readable y Writable streams ####################
# es una coleccion de datos tal como son los array o cadenas de texto
#sólo que estar en su totalidad se manejan por pedazos
# de esta manera podemos manejar una gran coleccion de datos

> streams/big-file.js

-------------------------------------------------------------
 Writable streams

Los Readable y Writeable streams tienen los siguientes eventos y funciones respectivamente:
Readable
Eventos

    data. Se dispara cuando recibe datos.
    end. Se dispara cuando termina de recibir datos.
    error. Se dispara cuando hay un error.

Funciones

    pipe
    unpipe
    read
    push

Writeable
Eventos

    drain. Se dispara cuando emite datos.
    finish. Se dispara cuando termina de emitir.
    error. Se dispara cuando hay un error.

Funciones

    write
    end

Recuerda que tienen estos eventos porque los heredan de la clase EventEmitter.
    
######################## Duplex y Transforms streams ##############################
archivos del tema:  streams
Ambos sirven para simplificar nuestro código:

    Duplex: implementa los métodos write y read a la vez.
    Transform: es similar a Duplex pero con una sintaxis más corta.

#################### Sistema operativo y sistema de archivos ##################
archivos del tema: so-archivos
En esta clase vemos dos módulos básicos:

    os. Sirve para consultar y manejar los recursos del sistema operativo.
    fs. Sirve para administrar (copiar, crear, borrar etc.) archivos y directorios.

Los métodos contenidos en estos módulos (y en todo Node.js) funcionan de forma asíncrona por default, 
pero también se pueden ejecutar de forma síncrona, por ejemplo el método readFile() tiene su versión 
